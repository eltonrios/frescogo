#include "string.ceu"
#include "out.ceu"
//#include "wclock.ceu"
#include "int0.ceu"     // UNO=D2, MEGA=D21
#include "int1.ceu"     // UNO=D2, MEGA=D21

native/pre do
    ##include <TVout.h>
    ##include <pollserial.h>
    ##include <fontALL.h>
    TVout TV;
    pollserial pserial;

    char NAMEA[20] = "Atleta 1";
    char NAMEB[20] = "Atleta 2";
    char STR[32];

    u32 TIMEOUT  = 300000;
    int DISTANCE = 800;

    char* TITLE (char* title) {
        sprintf(STR, "%15s: ", title);
        return STR;
    }
end
native _TIMEOUT, _DISTANCE;
native/plain  _TV, _pserial, _NAMEA, _NAMEB, _STR;
native/nohold _TITLE;

output high/low OUT_13;

input none RESTART;

{
    TV.begin(PAL,144,80);
    //TV.select_font(font6x8);
    TV.set_hbi_hook(pserial.begin(9600));
}
#if 0
{
  TV.clear_screen();
  //TV.println(0,0,"Multiple fonts:");
  //TV.select_font(font4x6);
  TV.println(0,0, "Abcdefghijklmnopqrstuvxz12345678901234567890aBcdefghijklmnopqrstuvxz12345678901234567890abCdefghijklmnopqrstuvxz12345678901234567890abcDefghijklmnopqrstuvxz12345678901234567890ABCDEFGHIJKL");
  //TV.select_font(font6x8);
  //TV.println("6x8 font FONT");
  //TV.select_font(font8x8);
  //TV.println("8x8 font FONT");
  //TV.select_font(font6x8);
}
do await FOREVER; end
#endif

var[100] u8 hits;

var u32 time  = _;
var int falls = _;
var u32 p0    = _;
var u32 p1    = _;

code/call Score (none) -> none do
    var u32 total = _min( _min(outer.p0,outer.p1)*1.2, _max(outer.p0,outer.p1) );
    var int pct   = 100 - _min(100, (outer.falls)*3);
    total = total * pct/100;

    _pserial.println();
    _pserial.println("--------------------------------");
    {
        sprintf(STR, "%15s", NAMEA);
        pserial.print(STR);
        pserial.print(" / ");
        sprintf(STR, "%s", NAMEB);
        pserial.print(STR);
        pserial.println();
    }

    _pserial.print("         (");
    _pserial.print(_DISTANCE);
    _pserial.print("cm / ");
    _pserial.print(_TIMEOUT/1000);
    _pserial.println("s)");

    _pserial.println("--------------------------------");
    _pserial.println();

    _pserial.print(_TITLE("TOTAL"));
    _pserial.println(total);

    _pserial.print(_TITLE("Tempo"));
    _pserial.print(outer.time);
    _pserial.println("ms");

    _pserial.print(_TITLE("Quedas"));
    _pserial.println(outer.falls);

    _pserial.print(_TITLE("Golpes"));
    _pserial.println($outer.hits);

    _pserial.print(_TITLE(_NAMEA));
    _pserial.println(outer.p0);

    _pserial.print(_TITLE(_NAMEB));
    _pserial.println(outer.p1);
    _pserial.println();

    var int i = -1;
    var int bola = 0;
    loop do
        i = i + 1;
        if i == $outer.hits then
            break;
        end
        if outer.hits[i] == 0 then
            bola = bola + 1;
            _pserial.print("-- Bola ");
            {{
                sprintf(STR, "%2d", @bola);
                pserial.print(STR);
            }}
            _pserial.println(" ---------------------");
            if $outer.hits>i+1 and outer.hits[i+1]==0 then
                i = i + 1;
            end
        end

        if i % 2 == 0 then
            _pserial.print("           ");
        else
            _pserial.print("                 ");
        end

        var int v = _map(outer.hits[i], 0,255, 0,2000);
        {{
            sprintf(STR, "%4d", @v);
            pserial.println(STR);
        }}
    end
    _pserial.println();
end

spawn do
    loop do
        loop do
            await 1s;
            if _pserial.available() as bool then
                await 1s;
                break;
            end
            await async do end;
        end

        {{
            int i = 0;
            while (pserial.available()) {
                STR[i++] = pserial.read();
            }
            while (STR[i-1]=='\n' || STR[i-1]=='\r') {
                i--;
            }
            STR[i++] = '\0';
        }}

        if {strncmp(STR, "reinicio", 8) == 0} as bool then
            await async do
                emit RESTART;
            end
        else/if {strncmp(STR, "placar", 6) == 0} as bool then
            //call Score();     (call below)
        else/if {strncmp(STR, "tempo ", 6) == 0} as bool then
            {{
                String str = &STR[6];
                TIMEOUT = str.toInt() * 1000;
            }}
        else/if {strncmp(STR, "distancia ", 10) == 0} as bool then
            {{
                String str = &STR[10];
                DISTANCE = str.toInt();
            }}
        else/if {strncmp(STR, "esquerda ", 9) == 0} as bool then
            if {strlen(&STR[9]) < 15} as bool then
                {strcpy(NAMEA, &STR[9]);}
            end
        else/if {strncmp(STR, "direita ", 8) == 0} as bool then
            if {strlen(&STR[8]) < 15} as bool then
                {strcpy(NAMEB, &STR[8]);}
            end
        end
        call Score();
    end
end

loop do
    watching RESTART do
        _pserial.println("= INICIO =");
        hits  = [];
        time  = 0;
        falls = 0;
        p0    = 0;
        p1    = 0;

        code/call Hit (var _char_ptr name, var int kmh) -> none do
#if 0
{
  TV.clear_screen();
  TV.println(0,0,"Multiple fonts:");
  TV.select_font(font4x6);
  TV.println("4x6 font FONT ate onde eu vou");
  TV.select_font(font6x8);
  TV.println("6x8 font FONT");
  TV.select_font(font8x8);
  TV.println("8x8 font FONT");
  TV.select_font(font6x8);
}
             _TV.print("Atleta 1");
            _TV.print("  ");
            _TV.print("Atleta 2\n");
            _TV.println();
            _TV.println(kmh);
#endif

            _pserial.print("> ");
            _pserial.print(name);
            _pserial.print(": ");
            _pserial.print(kmh);
            _pserial.println();
        end

        do
            loop do
                await 2s;
                _TV.tone(3000, 500);
                await 1s;

                var int nxt = do
                    par do
                        await INT0;
                        escape 1;
                    with
                        await INT1;
                        escape 0;
                    end
                end;

                var u32 t0 = _millis();
                hits = hits .. [0];

                if nxt != ($hits%2) then
                    hits = hits .. [0];
                end

                _TV.tone(500, 30);
                await 80ms;

                call Hit("saque", 0);

                loop do
                    par/or do
                        await 3s;
                        await 2s;
                        falls = falls + 1;
                        break;
                    with
                        if nxt == 0 then
                            await INT0;
                        else
                            await INT1;
                        end
                        nxt = 1 - nxt;

                        var u32 t1 = _millis();
                        var int dt = (t1 - t0) as int;
                        t0 = t1;

                        hits = hits .. [ _map(dt, 100,2000, 0,255) ];

                        var int kmh = ((36 as s32) * _DISTANCE / dt) as int;

                        if kmh < 50 then
                            _TV.tone(500, 30);
                            await 80ms;
                        else/if kmh < 60 then
                            _TV.tone(500, 30);
                            await 80ms;
                            _TV.tone(500, 30);
                        else/if kmh < 70 then
                            _TV.tone(2000, 30);
                            await 80ms;
                        else/if kmh < 80 then
                            _TV.tone(2000, 30);
                            await 80ms;
                            _TV.tone(2000, 30);
                        else/if kmh < 90 then
                            _TV.tone(4000, 30);
                            await 80ms;
                        else
                            _TV.tone(4000, 30);
                            await 80ms;
                            _TV.tone(4000, 30);
                        end

                        if nxt == 0 then
                            p0 = p0 + (kmh*kmh);    // p0 scores when p1 hits
                            call Hit(_NAMEA, kmh);
                        else
                            p1 = p1 + (kmh*kmh);
                            call Hit(_NAMEB, kmh);
                        end

                        time = time + dt;
                        if time >= _TIMEOUT then
                            escape;
                        end
                    end
                end

                _TV.tone(300, 100);
                await 150ms;
                _TV.tone(200, 100);
                await 150ms;
                _TV.tone(100, 200);
                await 200ms;

                call Score();
            end
        end

        _TV.tone(200, 2000);
        await 2s;

        call Score();
        _pserial.println("= FIM =");

        loop do
            par/or do
                par/or do
                    await INT0;
                with
                    await INT1;
                end
                await 500ms;
            with
                par/and do
                    await INT0;
                with
                    await INT1;
                end
                break;
            end
        end
    end
end
